@import "ui-variables";
@import "ui-mixins";

atom-text-editor[mini], atom-text-editor[mini]::shadow {
  color: @text-color-highlight;
  background-color: @input-background-color;
  border: 1px solid @input-border-color;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
  border-radius: @component-border-radius;
  padding-left: @component-padding/2;

  .cursor { border-color: #fff; }
  .selection .region { background-color: lighten(@input-background-color, 10%); }
}

atom-text-editor[mini].is-focused, atom-text-editor[mini].is-focused::shadow {
  background-color: lighten(@input-background-color, 5%);
  .selection .region { background-color: desaturate(@background-color-info, 50%); }
}

.find-container atom-text-editor[mini]::shadow {
  // Styles for regular expression highlighting
  .regexp {
    .escape {
      color: @find-and-replace-regexp-color-escape;
      font-weight: @find-and-replace-regexp-weight-escape;
    }
    .range{
      color: @find-and-replace-regexp-color-range;
      font-weight: @find-and-replace-regexp-weight-range;
    }
    .character-class {
      color: @find-and-replace-regexp-color-character-class;
      font-weight: @find-and-replace-regexp-weight-character-class;
    }
    .set {
      color: @find-and-replace-regexp-color-set;
      font-weight: @find-and-replace-regexp-weight-set;
    }
    .punctuation {
      color: @find-and-replace-regexp-color-punctuation;
      font-weight: @find-and-replace-regexp-weight-punctuation;
    }
    .keyword {
      color: @find-and-replace-regexp-color-keyword;
      font-weight: @find-and-replace-regexp-weight-keyword;
    }
  }
}

// FIXME: these should go in syntax themes?
atom-text-editor, atom-text-editor::shadow {
  .gutter.drop-shadow {
    -webkit-box-shadow: -2px 0 10px 2px #222;
  }
}
